[env]
# Set the location for the targetspec files to the root of the project
RUST_TARGET_PATH = {script = ["git rev-parse --show-toplevel"]}

# Add development flows for the xbuild targets
[tasks.dev-aarch64-test-flow]
description = "Development testing flow for aarch64"
category = "Development"
env = { "XBUILD_TARGET" = "aarch64-unknown-none-elf" }
run_task = "dev-test-flow"

[tasks.dev-armv7-test-flow]
description = "Development testing flow for armv7"
category = "Development"
env = { "XBUILD_TARGET" = "armv7-unknown-none-eabi" }
run_task = "dev-test-flow"

[tasks.dev-x86_64-test-flow]
description = "Development testing flow for x86_64"
category = "Development"
env = { "XBUILD_TARGET" = "x86_64-unknown-none-elf" }
run_task = "dev-test-flow"

# Add CI flows for the xbuild targets
[tasks.ci-aarch64-flow]
description = "CI flow for aarch64"
category = "CI"
env = { "XBUILD_TARGET" = "aarch64-unknown-none-elf" }
run_task = "ci-flow"

[tasks.ci-armv7-flow]
description = "CI flow for armv7"
category = "CI"
env = { "XBUILD_TARGET" = "armv7-unknown-none-elf" }
run_task = "ci-flow"

[tasks.ci-x86_64-flow]
description = "CI flow for x86_64"
category = "CI"
env = { "XBUILD_TARGET" = "x86_64-unknown-none-elf" }
run_task = "ci-flow"

# Add the xbuild task and integrate it into the default flows through the hook tasks
[tasks.post-build]
run_task = [
    { name = "xbuild",  condition = { env_false = ["CARGO_MAKE_CI"] } },
    { name = "ci-xbuild-flow", condition = { env_true = ["CARGO_MAKE_CI"] } }
]

[tasks.xbuild]
description = "Runs cargo xbuild command for a particular target"
category = "Build"
command = "cargo"
args = ["xbuild", "--target", "${XBUILD_TARGET}"]
condition = { env_set = ["XBUILD_TARGET"] }
dependendcies = ["install-rust-src"]

[tasks.xbuild-verbose]
description = "Runs cargo xbuild command for a particular target with verbose output"
category = "Build"
command = "cargo"
args = ["xbuild", "--verbose", "--target", "${XBUILD_TARGET}"]
condition = { env_set = ["XBUILD_TARGET"] }
dependendcies = ["install-rust-src"]

[tasks.xbuild-verbose-release]
description = "Runs cargo xbuild command for a particular target for release and with verbose output"
category = "Build"
command = "cargo"
args = ["xbuild", "--verbose", "--release", "--target", "${XBUILD_TARGET}"]
condition = { env_set = ["XBUILD_TARGET"] }
dependendcies = ["install-rust-src"]

[tasks.xbuild-verified-class]
description = "Runs cargo xbuild command for a particular target with the verified-class feature"
category = "Build"
command = "cargo"
args = ["xbuild", "--verbose", "--feature", "verified-class", "--target", "${XBUILD_TARGET}"]
condition = { env_set = ["XBUILD_TARGET"] }
dependendcies = ["install-rust-src"]

[tasks.ci-xbuild-flow]
description = "Runs the pre/post hooks and the required xbuild tasks for CI"
category = "CI"
dependendcies = [
    "pre-xbuild",
    "xbuild-verbose",
    "xbuild-verbose-release",
    "post-xbuild"
]

[tasks.pre-xbuild]
category = "Build"

[tasks.post-xbuild]
category = "Build"

[tasks.build]
condition = { env_not_set = ["XBUILD_TARGET"] }
args = ["build"]

[tasks.build-verbose]
condition = { env_not_set = ["XBUILD_TARGET"] }
args = ["build", "--verbose"]

[tasks-build-release]
condition = { env_not_set = ["XBUILD_TARGET"] }
args = ["build", "--release"]

[tasks.test]
condition = { env_not_set = ["XBUILD_TARGET"] }
args = ["test"]

[tasks.test-verbose]
condition = { env_not_set = ["XBUILD_TARGET"] }
args = ["test", "--verbose"]

# Install seL4 build dependendcies and hook into CI flow
[tasks.pre-ci-flow]
run_task = "install-sel4-deps"

[tasks.install-sel4-deps]
install_script = ["pip install --user sel4-deps"]

# Init and end hooks
[tasks.init]
command = "echo"
args = ["Starting in ${CARGO_MAKE_WORKING_DIRECTORY}"]

[tasks.end]
command = "echo"
args = ["Ending in ${CARGO_MAKE_WORKING_DIRECTORY}"]
